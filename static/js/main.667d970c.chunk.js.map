{"version":3,"sources":["hooks/reducers/contextualMenuReducer.js","hooks/useContextualMenu.jsx","components/Menu/ContextualMenu.jsx","hooks/useSnackMessages.jsx","hooks/useNotes.jsx","components/Note.jsx","components/Menu/NavListItem.jsx","components/Menu/NavDrawer.jsx","hooks/useTextFieldValidator.jsx","components/Dialog/AddNoteDialog.jsx","components/Dialog/GenerateNoteDialog.jsx","components/Menu/SideMenu.jsx","components/Site/Title.jsx","components/Site/Header.jsx","components/App.jsx","styles/theme.js","index.js"],"names":["defaultState","isOpen","anchor","id","reducer","state","action","type","payload","Error","ContextualMenuContext","createContext","useContextualMenu","context","useContext","dispatch","isMenuOpen","openMenu","currentTarget","dataset","closeMenu","ContextualMenu","menuItems","Menu","color","anchorEl","keepMounted","open","onClose","map","label","onClickFunc","MenuItem","key","onClick","useSnackMessages","enqueueSnackbar","useSnackbar","msgSuccess","msg","variant","msgWarning","msgError","NoteContext","useNotes","notes","setNotes","saveNotes","length","localStorage","setItem","JSON","stringify","loadNotes","restoredNotes","parse","getItem","e","console","error","addNote","input","Array","isArray","removeNote","noteID","filter","clearNotes","useStyles","makeStyles","theme","card","background","header","padding","spacing","title","content","maxHeight","overflowY","Note","classes","Card","data-note-id","square","className","CardHeader","titleTypographyProps","component","IconButton","aria-label","data-id","size","CardContent","Typography","listItem","listItemIcon","minWidth","listItemText","margin","NavListItem","icon","ListItem","button","ListItemIcon","ListItemText","primary","primaryTypographyProps","menuButton","marginRight","list","width","NavDrawer","top","children","useState","isDrawerOpen","setDrawerOpen","toggleDrawer","event","Drawer","role","onKeyDown","Toolbar","edge","hasError","errorMsg","useTextFieldValidator","setError","isBlank","str","isDuplicate","some","name","toLowerCase","isInvalid","regex","test","textAlign","actions","alignItems","display","justifyContent","AddNoteDialog","handleClose","handleAddNote","document","querySelector","value","trim","n","generate","handleKeyPress","evt","isTitleField","target","isContentField","isNoteAddButton","focus","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","helperText","onKeyPress","autoFocus","fullWidth","multiline","DialogActions","Button","count","iconButton","backgroundColor","palette","light","gray","main","clamp","min","max","Math","GenerateNoteDialog","setCount","disabled","from","_","i","hipsum","sentenceLowerBound","sentenceUpperBound","units","SideMenu","titleElement","addNoteDialog","setAddNoteDialog","generateNoteDialog","setGenerateNoteDialog","List","Divider","flexGrow","fontFamily","typography","headline","fontSize","Title","Header","AppBar","position","grid","gap","gridTemplateColumns","gridTemplateRows","App","Container","fixed","baseFont","fonts","body","colors","red","dark","contrastText","green","blue","gold","createMuiTheme","secondary","score","low","medium","high","headerBorder","paper","default","htmlFontSize","respTheme","responsiveFontSizes","AppRoot","CssBaseline","maxSnack","autoHideDuration","preventDuplicate","useReducer","useMemo","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.667d970c.chunk.js","sourcesContent":["export const defaultState = {\n  isOpen: false,\n  anchor: null,\n  id: null,\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case `OPEN`:\n      return {\n        ...state,\n        anchor: action.payload.anchor,\n        id: action.payload.id,\n        isOpen: true,\n      };\n    case `CLOSE`:\n      return defaultState;\n    default:\n      throw new Error();\n  }\n};\n","import React, { useReducer, useContext, useMemo, createContext } from 'react';\nimport { reducer, defaultState } from './reducers/contextualMenuReducer';\n\nconst ContextualMenuContext = createContext();\n\nconst useContextualMenu = () => {\n  const context = useContext(ContextualMenuContext);\n  if (!context) {\n    throw new Error(`useContextualMenu must be used within a ContextualMenuProvider`);\n  }\n  const [state, dispatch] = context;\n\n  return {\n    isMenuOpen: state.isOpen,\n    anchor: state.anchor,\n    id: state.id,\n    openMenu: ({ currentTarget }) =>\n      dispatch({ type: `OPEN`, payload: { anchor: currentTarget, id: currentTarget.dataset.id } }),\n    closeMenu: () => dispatch({ type: `CLOSE` }),\n  };\n};\n\nfunction ContextualMenuProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  const value = useMemo(() => [state, dispatch], [state]);\n  return <ContextualMenuContext.Provider value={value}>{children}</ContextualMenuContext.Provider>;\n}\n\nexport { ContextualMenuProvider, useContextualMenu };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport { useContextualMenu } from '../../hooks/useContextualMenu';\n\nconst ContextualMenu = ({ menuItems }) => {\n  const { isMenuOpen, anchor, id, closeMenu } = useContextualMenu();\n\n  return (\n    <Menu\n      id=\"contextual-menu\"\n      color=\"primary\"\n      anchorEl={anchor}\n      keepMounted\n      open={isMenuOpen}\n      onClose={closeMenu}\n    >\n      {menuItems.map(({ label, onClickFunc }) => {\n        const onClick = () => {\n          onClickFunc(id);\n          closeMenu();\n        };\n\n        return (\n          <MenuItem key={label} onClick={onClick}>\n            {label}\n          </MenuItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default ContextualMenu;\n\nContextualMenu.propTypes = {\n  menuItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      onClickFunc: PropTypes.func.isRequired,\n    }),\n  ).isRequired,\n};\n","import { useSnackbar } from 'notistack';\n\nconst useSnackMessages = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  return {\n    msgSuccess: msg => enqueueSnackbar(msg, { variant: `success` }),\n    msgWarning: msg => enqueueSnackbar(msg, { variant: `warning` }),\n    msgError: msg => enqueueSnackbar(msg, { variant: `error` }),\n  };\n};\n\nexport default useSnackMessages;\n","import React, { useState, useContext, useMemo, createContext } from 'react';\nimport useSnackMessages from './useSnackMessages';\n\nconst NoteContext = createContext();\n\nfunction useNotes() {\n  const context = useContext(NoteContext);\n  if (!context) {\n    throw new Error(`useNotes must be used within a NoteProvider`);\n  }\n\n  const [notes, setNotes] = context;\n  const { msgSuccess, msgError } = useSnackMessages();\n\n  return {\n    notes,\n    saveNotes: () => {\n      if (notes.length < 1) {\n        msgError(`There are no notes to save!`);\n        return;\n      }\n\n      localStorage.setItem(`notes`, JSON.stringify(notes, null, 4));\n      msgSuccess(`${notes.length} notes successfully saved!`);\n    },\n    loadNotes: () => {\n      try {\n        const restoredNotes = JSON.parse(localStorage.getItem(`notes`));\n        setNotes([...restoredNotes]);\n        msgSuccess(`${restoredNotes.length} notes successfully restored!`);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        msgError(`There are no notes in storage!`);\n      }\n    },\n    addNote: input =>\n      Array.isArray(input) ? setNotes([...notes, ...input]) : setNotes([...notes, input]),\n    removeNote: noteID => setNotes(notes.filter(({ id }) => id !== noteID)),\n    clearNotes: () => setNotes([]),\n  };\n}\n\nfunction NoteProvider({ children }) {\n  const [notes, setNotes] = useState([]);\n  const value = useMemo(() => [notes, setNotes], [notes]);\n  return <NoteContext.Provider value={value}>{children}</NoteContext.Provider>;\n}\n\nexport { NoteProvider, useNotes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nimport { useContextualMenu } from '../hooks/useContextualMenu';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    background: `linear-gradient(340deg, rgb(209, 209, 54) 0%, rgb(255, 255, 136) 20%)`,\n  },\n  header: {\n    padding: theme.spacing(2, 2, 0, 2),\n  },\n  title: {},\n  content: {\n    maxHeight: `10rem`,\n    overflowY: `scroll`,\n  },\n}));\n\nconst Note = ({ id, title, content }) => {\n  const { openMenu } = useContextualMenu();\n  const classes = useStyles();\n\n  return (\n    <Card data-note-id={id} square className={classes.card}>\n      <CardHeader\n        title={title}\n        titleTypographyProps={{\n          component: `h3`,\n          variant: `h5`,\n          className: classes.title,\n        }}\n        action={\n          <IconButton aria-label=\"More Info\" data-id={id} onClick={openMenu} size=\"small\">\n            <MoreIcon />\n          </IconButton>\n        }\n        className={classes.header}\n      />\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\">{content}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Note;\n\nNote.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1),\n  },\n  listItemIcon: {\n    minWidth: 0,\n    padding: theme.spacing(0, 2, 0, 1),\n  },\n  listItemText: {\n    margin: 0,\n  },\n}));\n\nconst NavListItem = ({ label, icon, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem button className={classes.listItem} onClick={onClick}>\n      <ListItemIcon className={classes.listItemIcon}>{icon}</ListItemIcon>\n      <ListItemText\n        primary={label}\n        primaryTypographyProps={{\n          variant: `body1`,\n        }}\n        className={classes.listItemText}\n      />\n    </ListItem>\n  );\n};\n\nexport default NavListItem;\n\nNavListItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.element.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  list: {\n    width: `256px`,\n  },\n}));\n\nconst NavDrawer = ({ top, children }) => {\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\n  const toggleDrawer = isOpen => event => {\n    if (event && event.type === `keydown` && (event.key === `Tab` || event.key === `Shift`)) {\n      return;\n    }\n    setDrawerOpen(isOpen);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Drawer anchor=\"left\" open={isDrawerOpen} onClose={toggleDrawer(false)}>\n        <div\n          role=\"presentation\"\n          className={classes.list}\n          onClick={toggleDrawer(false)}\n          onKeyDown={toggleDrawer(false)}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              edge=\"start\"\n              aria-label=\"close drawer\"\n              onClick={toggleDrawer(false)}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            {top}\n          </Toolbar>\n          {children}\n        </div>\n      </Drawer>\n      <IconButton\n        color=\"inherit\"\n        edge=\"start\"\n        aria-label=\"open drawer\"\n        onClick={toggleDrawer(true)}\n        className={classes.menuButton}\n      >\n        <MenuIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default NavDrawer;\n\nNavDrawer.propTypes = {\n  top: PropTypes.element.isRequired,\n};\n","import React, { useState } from 'react';\nimport useSnackMessages from './useSnackMessages';\n\nconst defaultState = { hasError: false, errorMsg: `` };\n\nconst useTextFieldValidator = () => {\n  const { msgError } = useSnackMessages();\n  const [error, setError] = useState(defaultState);\n\n  // Check if the field is not blank\n  const isBlank = (str, errorMsg = <span>Text field cannot be blank!</span>) => {\n    if (str === ``) {\n      setError({ hasError: true, errorMsg });\n      msgError(errorMsg);\n      return true;\n    }\n\n    setError(defaultState);\n    return false;\n  };\n\n  const isDuplicate = (\n    str,\n    list,\n    errorMsg = (\n      <span>\n        &quot;<strong>{str}</strong>&quot; is a duplicate!\n      </span>\n    ),\n  ) => {\n    if (list.some(name => name.toLowerCase() === str.toLowerCase())) {\n      setError({ hasError: true, errorMsg });\n      msgError(errorMsg);\n      return true;\n    }\n\n    setError(defaultState);\n    return false;\n  };\n\n  const isInvalid = (name, regex, errorMsg = <span>Invalid data entered!</span>) => {\n    if (!regex.test(name)) {\n      setError({ hasError: true, errorMsg });\n      msgError(errorMsg);\n      return true;\n    }\n\n    setError(defaultState);\n    return false;\n  };\n\n  return {\n    hasError: error.hasError,\n    errorMsg: error.errorMsg,\n    isBlank,\n    isDuplicate,\n    isInvalid,\n  };\n};\n\nexport default useTextFieldValidator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { generate } from 'shortid';\nimport { makeStyles } from '@material-ui/styles';\nimport { useNotes } from '../../hooks/useNotes';\nimport useTextFieldValidator from '../../hooks/useTextFieldValidator';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    padding: theme.spacing(2, 2, 0, 2),\n    textAlign: `center`,\n  },\n  actions: {\n    alignItems: `center`,\n    display: `flex`,\n    justifyContent: `space-between`,\n  },\n}));\n\nconst AddNoteDialog = ({ isOpen, handleClose }) => {\n  const { notes, addNote } = useNotes();\n  const { hasError, errorMsg, isBlank, isInvalid, isDuplicate } = useTextFieldValidator();\n  const classes = useStyles();\n\n  function handleAddNote() {\n    // Get the provided name\n    const title = document.querySelector(`#note-title`).value.trim();\n    const content = document.querySelector(`#note-content`).value.trim();\n\n    // Check if the name is not an empty string (blank)\n    if (isBlank(title) || isBlank(content)) return;\n    // Check if the name consists of valid characters\n    const regex = /^[a-zA-Z0-9 _-]+$/;\n    if (isInvalid(title, regex, <span>Invalid characters detected</span>)) return;\n    // Checks if the name already exists\n    if (\n      isDuplicate(\n        title,\n        notes.map(n => n.title),\n      )\n    )\n      return;\n\n    addNote({ id: generate(), title, content });\n    handleClose();\n  }\n\n  function handleKeyPress(evt) {\n    const isTitleField = evt.target.id === `note-title`;\n    const isContentField = evt.target.id === `note-content`;\n    const isNoteAddButton = evt.target.id === `note-add-button`;\n    const isEnterPressed = evt.key === `Enter`;\n\n    if (isEnterPressed) {\n      if (isTitleField) {\n        document.querySelector(`#note-content`).focus();\n      }\n      if (isContentField) {\n        document.querySelector(`#note-add-button`).focus();\n      }\n      if (isNoteAddButton) {\n        handleAddNote();\n      }\n    }\n  }\n\n  return (\n    <Dialog open={isOpen} onClose={handleClose} aria-labelledby=\"add-note-dialog-title\">\n      <DialogTitle id=\"add-note-dialog-title\" className={classes.header}>\n        Add Note\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          error={hasError}\n          helperText={errorMsg}\n          onKeyPress={handleKeyPress}\n          label=\"Title\"\n          id=\"note-title\"\n          autoFocus\n          fullWidth\n          margin=\"dense\"\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"text\"\n        />\n        <TextField\n          error={hasError}\n          helperText={errorMsg}\n          onKeyPress={handleKeyPress}\n          label=\"Content\"\n          id=\"note-content\"\n          multiline\n          fullWidth\n          margin=\"dense\"\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"text\"\n        />\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button onClick={handleClose} color=\"default\">\n          Cancel\n        </Button>\n        <Button onClick={handleAddNote} color=\"secondary\" id=\"note-add-button\">\n          Add\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddNoteDialog;\n\nAddNoteDialog.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport hipsum from 'lorem-hipsum';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { generate } from 'shortid';\nimport { makeStyles } from '@material-ui/styles';\nimport { useNotes } from '../../hooks/useNotes';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    padding: theme.spacing(2, 2, 0, 2),\n    textAlign: `center`,\n  },\n  count: {\n    width: `50px`,\n    textAlign: `center`,\n  },\n  content: {\n    alignItems: `center`,\n    display: `flex`,\n    justifyContent: `center`,\n  },\n  iconButton: {\n    backgroundColor: theme.palette.primary.light,\n    color: `white`,\n    margin: theme.spacing(0, 1),\n    '&:hover': {\n      backgroundColor: theme.palette.gray.main,\n    },\n  },\n  actions: {\n    alignItems: `center`,\n    display: `flex`,\n    justifyContent: `space-between`,\n  },\n}));\n\nconst clamp = (min, max, value) => Math.min(max, Math.max(min, value));\n\nconst GenerateNoteDialog = ({ isOpen, handleClose }) => {\n  const [count, setCount] = useState(1);\n  const max = 10;\n  const { addNote } = useNotes();\n  const classes = useStyles();\n\n  const genDecrement = () => setCount(clamp(0, max, count - 1));\n  const genIncrement = () => setCount(clamp(0, max, count + 1));\n  function handleGenerateNotes() {\n    addNote(\n      Array.from({ length: count }, (_, i) => i).map(() => ({\n        id: generate(),\n        title: hipsum({ sentenceLowerBound: 2, sentenceUpperBound: 6 }),\n        content: hipsum({ units: `paragraphs` }),\n      })),\n    );\n    handleClose();\n  }\n\n  return (\n    <Dialog open={isOpen} onClose={handleClose} aria-labelledby=\"add-note-dialog-title\">\n      <DialogTitle id=\"add-note-dialog-title\" className={classes.header}>\n        Generate Note\n      </DialogTitle>\n      <DialogContent className={classes.content}>\n        <IconButton\n          aria-label=\"Decrement\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.iconButton}\n          disabled={count < 1}\n          onClick={genDecrement}\n        >\n          <RemoveIcon />\n        </IconButton>\n        <Typography variant=\"body1\" className={classes.count}>\n          {count}\n        </Typography>\n        <IconButton\n          aria-label=\"Increment\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.iconButton}\n          disabled={count > max - 1}\n          onClick={genIncrement}\n        >\n          <AddIcon />\n        </IconButton>\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button onClick={handleClose} color=\"default\">\n          Cancel\n        </Button>\n        <Button onClick={handleGenerateNotes} color=\"secondary\">\n          Generate\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default GenerateNoteDialog;\n\nGenerateNoteDialog.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AddIcon from '@material-ui/icons/NoteAdd';\nimport GenerateIcon from '@material-ui/icons/DynamicFeed';\nimport SaveIcon from '@material-ui/icons/Save';\nimport LoadIcon from '@material-ui/icons/Publish';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport NavListItem from './NavListItem';\nimport NavDrawer from './NavDrawer';\nimport AddNoteDialog from '../Dialog/AddNoteDialog';\nimport GenerateNoteDialog from '../Dialog/GenerateNoteDialog';\nimport { useNotes } from '../../hooks/useNotes';\n\nconst SideMenu = ({ titleElement }) => {\n  const [addNoteDialog, setAddNoteDialog] = useState(false);\n  const [generateNoteDialog, setGenerateNoteDialog] = useState(false);\n  const { saveNotes, loadNotes } = useNotes();\n\n  const handleAddNoteClick = () => setAddNoteDialog(true);\n  const handleAddNoteClose = () => setAddNoteDialog(false);\n  const handleGenerateNoteClick = () => setGenerateNoteDialog(true);\n  const handleGenerateNoteClose = () => setGenerateNoteDialog(false);\n  const handleSaveNotesClick = () => saveNotes();\n  const handleLoadNotesClick = () => loadNotes();\n\n  return (\n    <>\n      <NavDrawer top={titleElement}>\n        <List component=\"nav\">\n          <NavListItem label=\"Add Note\" icon={<AddIcon />} onClick={handleAddNoteClick} />\n          <NavListItem\n            label=\"Generate Note\"\n            icon={<GenerateIcon />}\n            onClick={handleGenerateNoteClick}\n          />\n          <Divider />\n          <NavListItem label=\"Save All Notes\" icon={<SaveIcon />} onClick={handleSaveNotesClick} />\n          <NavListItem label=\"Load Notes\" icon={<LoadIcon />} onClick={handleLoadNotesClick} />\n        </List>\n      </NavDrawer>\n      <AddNoteDialog isOpen={addNoteDialog} handleClose={handleAddNoteClose} />\n      <GenerateNoteDialog isOpen={generateNoteDialog} handleClose={handleGenerateNoteClose} />\n    </>\n  );\n};\n\nexport default SideMenu;\n\nSideMenu.propTypes = {\n  titleElement: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    fontFamily: theme.typography.headline,\n    fontSize: `1.75rem`,\n  },\n}));\n\nconst Title = () => {\n  const classes = useStyles();\n\n  return (\n    <Typography variant=\"h1\" className={classes.title}>\n      Quick Notes\n    </Typography>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport SideMenu from '../Menu/SideMenu';\nimport Title from './Title';\n\nconst Header = () => (\n  <AppBar position=\"sticky\">\n    <Toolbar>\n      <SideMenu titleElement={<Title />} />\n      <Title />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Container from '@material-ui/core/Container';\nimport ContextualMenu from './Menu/ContextualMenu';\nimport { useNotes } from '../hooks/useNotes';\nimport Note from './Note';\nimport Header from './Site/Header';\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    display: `grid`,\n    gap: `1rem`,\n    margin: `2rem auto`,\n    gridTemplateColumns: `repeat(auto-fill, minmax(15rem, 1fr))`,\n    gridTemplateRows: `repeat(auto-fill, minmax(15rem, 1fr))`,\n  },\n}));\n\nconst App = () => {\n  const { notes, removeNote } = useNotes();\n  const classes = useStyles();\n  const handleRemoveNote = id => removeNote(id);\n\n  return (\n    <>\n      <Header />\n      <Container component=\"main\" fixed>\n        <section className={classes.grid}>\n          {notes.map(({ id, title, content }) => (\n            <Note key={id} id={id} title={title} content={content} />\n          ))}\n        </section>\n      </Container>\n      <ContextualMenu\n        menuItems={[\n          {\n            label: `Remove`,\n            onClickFunc: handleRemoveNote,\n          },\n        ]}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst background = {\n  paper: `#eee`,\n  default: `#fafafa`,\n};\n\nconst baseFont = `Roboto, 'Helvetica Neue', Arial, sans-serif`;\nconst fonts = {\n  headline: baseFont,\n  body: `Dosis, ${baseFont}`,\n};\n\nconst colors = {\n  red: {\n    main: `#cd1717`,\n    light: `#e93d3d`,\n    dark: `#a20707`,\n    contrastText: `#fff`,\n  },\n  green: {\n    main: `#5cb35c`,\n    light: `#8fd28f`,\n    dark: `#349234`,\n    contrastText: `#fff`,\n  },\n  blue: {\n    main: `#36a1f4`,\n    light: `#8bc9f8`,\n    dark: `#047cd8`,\n    contrastText: `#fff`,\n  },\n  gold: {\n    main: `#fcb448`,\n    light: `#ffc46B`,\n    dark: `#ed991c`,\n    contrastText: `#fff`,\n  },\n  gray: {\n    main: `#ccc`,\n    light: `#eee`,\n    dark: `#aaa`,\n    contrastText: `#000`,\n  },\n};\n\nexport default createMuiTheme({\n  palette: {\n    primary: colors.blue,\n    secondary: colors.green,\n    error: colors.red,\n    score: {\n      low: colors.green.light,\n      medium: colors.gold.main,\n      high: colors.red.dark,\n    },\n    list: {\n      header: colors.gray.light,\n      headerBorder: colors.gray.dark,\n    },\n    background,\n    ...colors,\n  },\n  typography: {\n    fontFamily: baseFont,\n    htmlFontSize: 16,\n    headline: fonts.headline,\n    body: fonts.body,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline, MuiThemeProvider, responsiveFontSizes } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\nimport App from './components/App';\nimport { NoteProvider } from './hooks/useNotes';\nimport { ContextualMenuProvider } from './hooks/useContextualMenu';\nimport theme from './styles/theme';\n\nconst respTheme = responsiveFontSizes(theme);\n\nconst AppRoot = (\n  <MuiThemeProvider theme={respTheme}>\n    <CssBaseline />\n    <SnackbarProvider maxSnack={3} autoHideDuration={3000} preventDuplicate>\n      <ContextualMenuProvider>\n        <NoteProvider>\n          <App />\n        </NoteProvider>\n      </ContextualMenuProvider>\n    </SnackbarProvider>\n  </MuiThemeProvider>\n);\n\nReactDOM.render(AppRoot, document.getElementById(`app`));\n"],"sourceRoot":""}